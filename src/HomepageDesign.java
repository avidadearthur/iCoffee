import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

class homepageDesign extends JFrame {
    private JPanel myPanel;
    private JPanel AlarmPanel2;
    private JPanel AlarmPanel1;
    private JPanel AlarmPanel3;

    private JButton coffeeStatsButton;
    private JButton plusButton;

    private JButton calendarButton1;
    private JButton calendarButton2;
    private JButton calendarButton3;

    private JButton onOffButton1;
    private JButton onOffButton2;
    private JButton onOffButton3;

    private JButton Del1;

    private JLabel showDate1;
    private JLabel showHour1;
    private JLabel showMin1;
    private JLabel showVol1;
    private JLabel showTemp1;

    private JLabel showDate2;
    private JLabel showHour2;
    private JLabel showMin2;
    private JLabel showVol2;
    private JLabel showTemp2;

    private JLabel showDate3;
    private JLabel showHour3;
    private JLabel showMin3;
    private JLabel showVol3;
    private JLabel showTemp3;
    private JLabel ICoffee;

    private JButton Del2;
    private JButton Del3;
    private JLabel errorLabel;


    public homepageDesign(String title) {
        super(title);
        setContentPane(myPanel);
        AlarmPanel1.setVisible(false);
        AlarmPanel2.setVisible(false);
        AlarmPanel3.setVisible(false);
    }


    public JPanel getAlarmPanel2() {
        return AlarmPanel2;
    }

    public JPanel getAlarmPanel1() {
        return AlarmPanel1;
    }

    public JPanel getAlarmPanel3() {
        return AlarmPanel3;
    }

    public JButton getCalendarButton1() {
        return calendarButton1;
    }

    public JButton getCalendarButton2() {
        return calendarButton2;
    }

    public JButton getCalendarButton3() {
        return calendarButton3;
    }

    public JButton getOnOffButton1() {
        return onOffButton1;
    }

    public JButton getOnOffButton2() {
        return onOffButton2;
    }

    public JButton getOnOffButton3() {
        return onOffButton3;
    }

    public JButton getDel1() {
        return Del1;
    }

    public JButton getDel2() {
        return Del2;
    }

    public JButton getDel3() {
        return Del3;
    }

    public JButton getPlusButton() {
        return plusButton;
    }

    public JButton getCoffeeStatsButton() {
        return coffeeStatsButton;
    }

    public JLabel getShowDate1() {
        return showDate1;
    }

    public JLabel getShowHour1() {
        return showHour1;
    }

    public JLabel getShowMin1() {
        return showMin1;
    }

    public JLabel getShowVol1() {
        return showVol1;
    }

    public JLabel getShowTemp1() {
        return showTemp1;
    }

    public JLabel getShowDate2() {
        return showDate2;
    }

    public JLabel getShowHour2() {
        return showHour2;
    }

    public JLabel getShowMin2() {
        return showMin2;
    }

    public JLabel getShowVol2() {
        return showVol2;
    }

    public JLabel getShowTemp2() {
        return showTemp2;
    }

    public JLabel getShowDate3() {
        return showDate3;
    }

    public JLabel getShowHour3() {
        return showHour3;
    }

    public JLabel getShowMin3() {
        return showMin3;
    }

    public JLabel getShowVol3() {
        return showVol3;
    }

    public JLabel getShowTemp3() {
        return showTemp3;
    }

    public JLabel getErrorLabel() {
        return errorLabel;
    }

    public void setShowDate1(String newText) {
        showDate1.setText(newText);
    }

    public void setShowDate2(String newText) {
        showDate2.setText(newText);
    }

    public void setShowDate3(String newText) {
        showDate3.setText(newText);
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        myPanel = new JPanel();
        myPanel.setLayout(new GridLayoutManager(3, 7, new Insets(50, 50, 50, 50), -1, -1));
        ICoffee = new JLabel();
        ICoffee.setEnabled(false);
        Font ICoffeeFont = this.$$$getFont$$$("BankGothic Md BT", -1, 28, ICoffee.getFont());
        if (ICoffeeFont != null) ICoffee.setFont(ICoffeeFont);
        ICoffee.setText("ICoffee");
        myPanel.add(ICoffee, new GridConstraints(0, 0, 1, 7, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        plusButton = new JButton();
        Font plusButtonFont = this.$$$getFont$$$(null, -1, 36, plusButton.getFont());
        if (plusButtonFont != null) plusButton.setFont(plusButtonFont);
        plusButton.setText("+");
        myPanel.add(plusButton, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        coffeeStatsButton = new JButton();
        coffeeStatsButton.setText("Coffee stats");
        myPanel.add(coffeeStatsButton, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        errorLabel = new JLabel();
        errorLabel.setText("press plusbutton to add an alarm");
        myPanel.add(errorLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return myPanel;
    }

}
